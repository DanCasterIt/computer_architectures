


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* STARTUP.S: Startup file for Philips LPC2000         
                                             */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2007 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   14 00000000         
   15 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   16 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   17 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   18 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   19 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   20 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   21 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   22 00000000         
   23 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   24 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   25 00000000         
   26 00000000         
   27 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   28 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   29 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>



ARM Macro Assembler    Page 2 


   30 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   31 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   32 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   33 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   34 00000000         ;// </h>
   35 00000000         
   36 00000000 00000080 
                       UND_Stack_Size
                               EQU              0x00000080
   37 00000000 00000080 
                       SVC_Stack_Size
                               EQU              0x00000080
   38 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   39 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   40 00000000 00000080 
                       IRQ_Stack_Size
                               EQU              0x00000080
   41 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
   42 00000000         
   44 00000000 00000180 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   45 00000000         
   46 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   47 00000000         
   48 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   49 00000400         __initial_sp
                               SPACE            ISR_Stack_Size
   50 00000580         
   51 00000580         Stack_Top
   52 00000580         
   53 00000580         
   54 00000580         ;// <h> Heap Configuration
   55 00000580         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   56 00000580         ;// </h>
   57 00000580         
   58 00000580 00000100 
                       Heap_Size
                               EQU              0x00000100
   59 00000580         
   60 00000580                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   61 00000000         
   62 00000000         Heap_Mem
                               SPACE            Heap_Size
   63 00000100         
   64 00000100         
   65 00000100         
   66 00000100         



ARM Macro Assembler    Page 3 


   67 00000100                 PRESERVE8
   68 00000100         
   69 00000100         
   70 00000100         ; Area Definition and Entry Point
   71 00000100         ;  Startup Code must be linked first at Address at which
                        it expects to run.
   72 00000100         
   73 00000100                 AREA             RESET, CODE, READONLY
   74 00000000                 ARM
   75 00000000         
   76 00000000         
   77 00000000         ; Exception vector table handles every type of exception
                       s.
   78 00000000         ;  It is mapped to Address 0.
   79 00000000         ;  Absolute addressing mode must be used.
   80 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
   81 00000000         
   82 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr ; reset         
                                                            
   83 00000004 E59FF018        LDR              PC, Undef_Addr ; undefined inst
                                                            ruction
   84 00000008 E59FF018        LDR              PC, SWI_Addr ; software interru
                                                            pt
   85 0000000C E59FF018        LDR              PC, PAbt_Addr ; prefetch abort
   86 00000010 E59FF018        LDR              PC, DAbt_Addr ; data abort
   87 00000014 E1A00000        NOP                          ; reserved vector 
   88 00000018 E59FF018        LDR              PC, IRQ_Addr ; IRQ
   89 0000001C E59FF018        LDR              PC, FIQ_Addr ; FIQ
   90 00000020         
   91 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
   92 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
   93 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
   94 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
   95 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
   96 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
   97 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
   98 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
   99 00000040         
  100 00000040 EA000007 
                       Undef_Handler
                               B                Division
  101 00000044 EAFFFFFE 



ARM Macro Assembler    Page 4 


                       PAbt_Handler
                               B                PAbt_Handler
  102 00000048 EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  103 0000004C EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
  104 00000050 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  105 00000054         
  106 00000054         ;SWI management
  107 00000054         SWI_Handler
  108 00000054 E92D5FFB        STMFD            sp!, {r0-r1, r3-r12, lr}
  109 00000058 E51E0004        LDR              r0, [lr, #-4]
  110 0000005C E3C014FF        BIC              r1, r0, #0xff000000
  111 00000060         ; test the identification code of the interrupt
  112 00000060         
  113 00000060         ; your action here 
  114 00000060         
  115 00000060 E8FD9FFB 
                       end_swi LDMFD            sp!, {r0-r1, r3-r12, pc}^
  116 00000064         
  117 00000064         Division
  118 00000064 E92D4FFF        STMFD            sp!, {r0-r11, lr}
  119 00000068 E51E0004        LDR              r0, [lr, #-4]
  120 0000006C E20016FF        BIC              r1, r0, #0xf00fffff
  121 00000070 E351067F        CMP              r1, #0x07F00000 ; is division?
  122 00000074 1A000008        BNE              end_Division
  123 00000078 E1A03420        MOV              R3, R0, LSR #8
  124 0000007C E20330FF        AND              R3, R3, #0xFF ; divisor in r5 
  125 00000080 E200200F        BIC              R2, R0, #0xfffffff0 ; r2 <- whi
                                                            ch register?
  126 00000084 E79D6102        LDR              R6, [SP, R2, LSL #2] ; metti in
                                                             r3 il valore all'i
                                                            ndirizzo [SP+(R2>>2
                                                            )]
  127 00000088         
  128 00000088 E3A0C000        LDR              R12, =0
  129 0000008C         LOOP1
  130 0000008C E0466003        SUB              R6, R6, R3
  131 00000090 E28CC001        ADD              R12, R12, #1
  132 00000094 E1560003        CMP              R6, R3
  133 00000098 CAFFFFFB        BGT              LOOP1       ; R6 > R3 -> jump
  134 0000009C         
  135 0000009C E8FD8FFF 
                       end_Division
                               LDMFD            sp!, {r0-r11, pc}^
  136 000000A0         
  137 000000A0         
  138 000000A0         ; Reset Handler
  139 000000A0         Reset_Handler
  140 000000A0         
  141 000000A0         
  142 000000A0         ; Initialise Interrupt System
  143 000000A0         ;  ...
  144 000000A0         
  145 000000A0         



ARM Macro Assembler    Page 5 


  146 000000A0         ; Setup Stack for each mode
  147 000000A0         
  148 000000A0 E59F0050        LDR              R0, =Stack_Top
  149 000000A4         
  150 000000A4         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  151 000000A4         ; MSR transfers the value of the immediate to the Progra
                       m Status Register (CPSR).
  152 000000A4         ; CPSR indicates the state of the machine: it contains c
                       ondition code flags,
  153 000000A4         ; interrupt enable flags, the current mode, and the curr
                       ent state.
  154 000000A4         ; We change the mode by updating CPSR
  155 000000A4         
  156 000000A4 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  157 000000A8 E1A0D000        MOV              SP, R0
  158 000000AC E2400080        SUB              R0, R0, #UND_Stack_Size
  159 000000B0         
  160 000000B0         ;  Enter Abort Mode and set its Stack Pointer
  161 000000B0 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  162 000000B4 E1A0D000        MOV              SP, R0
  163 000000B8 E2400000        SUB              R0, R0, #ABT_Stack_Size
  164 000000BC         
  165 000000BC         ;  Enter FIQ Mode and set its Stack Pointer
  166 000000BC E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  167 000000C0 E1A0D000        MOV              SP, R0
  168 000000C4 E2400000        SUB              R0, R0, #FIQ_Stack_Size
  169 000000C8         
  170 000000C8         ;  Enter IRQ Mode and set its Stack Pointer
  171 000000C8 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  172 000000CC E1A0D000        MOV              SP, R0
  173 000000D0 E2400080        SUB              R0, R0, #IRQ_Stack_Size
  174 000000D4         
  175 000000D4         ;  Enter Supervisor Mode and set its Stack Pointer
  176 000000D4 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  177 000000D8 E1A0D000        MOV              SP, R0
  178 000000DC E2400080        SUB              R0, R0, #SVC_Stack_Size
  179 000000E0         
  180 000000E0         ;  Enter User Mode and set its Stack Pointer
  181 000000E0 E321F010        MSR              CPSR_c, #Mode_USR
  182 000000E4 E1A0D000        MOV              SP, R0
  183 000000E8 E24DAB01        SUB              SL, SP, #USR_Stack_Size
  184 000000EC         
  185 000000EC         
  186 000000EC         
  187 000000EC         ; main program starts here.
  188 000000EC         ; The interrupt service routine with identification code
                        10h is called   
  189 000000EC         
  190 000000EC E3A0601A        MOV              R6, #26
  191 000000F0 E7F005F6 
                       DIVr6BY5
                               DCD              0xE7F005F6
  192 000000F4         



ARM Macro Assembler    Page 6 


  193 000000F4         stop
  194 000000F4 EAFFFFFE        B                stop
  195 000000F8                 END
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=template2.d -otemplate2.
o -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\Philips --predefine="__EVAL SETA 1" --lis
t=template2.lst template2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 46 in file template2.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 48 in file template2.s
   Uses
      None
Comment: Stack_Mem unused
Stack_Top 00000580

Symbol: Stack_Top
   Definitions
      At line 51 in file template2.s
   Uses
      At line 148 in file template2.s
Comment: Stack_Top used once
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 49 in file template2.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 60 in file template2.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 62 in file template2.s
   Uses
      None
Comment: Heap_Mem unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 95 in file template2.s
   Uses
      At line 86 in file template2.s
Comment: DAbt_Addr used once
DAbt_Handler 00000048

Symbol: DAbt_Handler
   Definitions
      At line 102 in file template2.s
   Uses
      At line 95 in file template2.s
      At line 102 in file template2.s

DIVr6BY5 000000F0

Symbol: DIVr6BY5
   Definitions
      At line 191 in file template2.s
   Uses
      None
Comment: DIVr6BY5 unused
Division 00000064

Symbol: Division
   Definitions
      At line 117 in file template2.s
   Uses
      At line 100 in file template2.s
Comment: Division used once
FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 98 in file template2.s
   Uses
      At line 89 in file template2.s
Comment: FIQ_Addr used once
FIQ_Handler 00000050

Symbol: FIQ_Handler
   Definitions
      At line 104 in file template2.s
   Uses
      At line 98 in file template2.s
      At line 104 in file template2.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 97 in file template2.s
   Uses
      At line 88 in file template2.s
Comment: IRQ_Addr used once
IRQ_Handler 0000004C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: IRQ_Handler
   Definitions
      At line 103 in file template2.s
   Uses
      At line 97 in file template2.s
      At line 103 in file template2.s

LOOP1 0000008C

Symbol: LOOP1
   Definitions
      At line 129 in file template2.s
   Uses
      At line 133 in file template2.s
Comment: LOOP1 used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 94 in file template2.s
   Uses
      At line 85 in file template2.s
Comment: PAbt_Addr used once
PAbt_Handler 00000044

Symbol: PAbt_Handler
   Definitions
      At line 101 in file template2.s
   Uses
      At line 94 in file template2.s
      At line 101 in file template2.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 73 in file template2.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 91 in file template2.s
   Uses
      At line 82 in file template2.s
Comment: Reset_Addr used once
Reset_Handler 000000A0

Symbol: Reset_Handler
   Definitions
      At line 139 in file template2.s
   Uses
      At line 91 in file template2.s
Comment: Reset_Handler used once
SWI_Addr 00000028




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: SWI_Addr
   Definitions
      At line 93 in file template2.s
   Uses
      At line 84 in file template2.s
Comment: SWI_Addr used once
SWI_Handler 00000054

Symbol: SWI_Handler
   Definitions
      At line 107 in file template2.s
   Uses
      At line 93 in file template2.s
Comment: SWI_Handler used once
Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 92 in file template2.s
   Uses
      At line 83 in file template2.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 100 in file template2.s
   Uses
      At line 92 in file template2.s
Comment: Undef_Handler used once
Vectors 00000000

Symbol: Vectors
   Definitions
      At line 82 in file template2.s
   Uses
      None
Comment: Vectors unused
end_Division 0000009C

Symbol: end_Division
   Definitions
      At line 135 in file template2.s
   Uses
      At line 122 in file template2.s
Comment: end_Division used once
end_swi 00000060

Symbol: end_swi
   Definitions
      At line 115 in file template2.s
   Uses
      None
Comment: end_swi unused
stop 000000F4

Symbol: stop
   Definitions
      At line 193 in file template2.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 194 in file template2.s
Comment: stop used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 38 in file template2.s
   Uses
      At line 44 in file template2.s
      At line 163 in file template2.s

FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 39 in file template2.s
   Uses
      At line 44 in file template2.s
      At line 168 in file template2.s

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 24 in file template2.s
   Uses
      At line 156 in file template2.s
      At line 161 in file template2.s
      At line 166 in file template2.s
      At line 171 in file template2.s
      At line 176 in file template2.s

Heap_Size 00000100

Symbol: Heap_Size
   Definitions
      At line 58 in file template2.s
   Uses
      At line 62 in file template2.s
Comment: Heap_Size used once
IRQ_Stack_Size 00000080

Symbol: IRQ_Stack_Size
   Definitions
      At line 40 in file template2.s
   Uses
      At line 44 in file template2.s
      At line 173 in file template2.s

ISR_Stack_Size 00000180

Symbol: ISR_Stack_Size
   Definitions
      At line 44 in file template2.s
   Uses
      At line 49 in file template2.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 23 in file template2.s
   Uses
      At line 156 in file template2.s
      At line 161 in file template2.s
      At line 166 in file template2.s
      At line 171 in file template2.s
      At line 176 in file template2.s

Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 19 in file template2.s
   Uses
      At line 161 in file template2.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 16 in file template2.s
   Uses
      At line 166 in file template2.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 17 in file template2.s
   Uses
      At line 171 in file template2.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 18 in file template2.s
   Uses
      At line 176 in file template2.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 21 in file template2.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 20 in file template2.s
   Uses
      At line 156 in file template2.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 15 in file template2.s
   Uses
      At line 181 in file template2.s
Comment: Mode_USR used once
SVC_Stack_Size 00000080

Symbol: SVC_Stack_Size
   Definitions
      At line 37 in file template2.s
   Uses
      At line 44 in file template2.s
      At line 178 in file template2.s

UND_Stack_Size 00000080

Symbol: UND_Stack_Size
   Definitions
      At line 36 in file template2.s
   Uses
      At line 44 in file template2.s
      At line 158 in file template2.s

USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions
      At line 41 in file template2.s
   Uses
      At line 48 in file template2.s
      At line 183 in file template2.s

17 symbols
371 symbols in table
