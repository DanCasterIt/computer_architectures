


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* STARTUP.S: Startup file for Philips LPC2000         
                                             */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2007 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   14 00000000         
   15 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   16 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   17 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   18 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   19 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   20 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   21 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   22 00000000         
   23 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   24 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   25 00000000         
   26 00000000         
   27 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   28 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   29 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>



ARM Macro Assembler    Page 2 


   30 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   31 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   32 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   33 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   34 00000000         ;// </h>
   35 00000000         
   36 00000000 00000080 
                       UND_Stack_Size
                               EQU              0x00000080
   37 00000000 00000080 
                       SVC_Stack_Size
                               EQU              0x00000080
   38 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   39 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   40 00000000 00000080 
                       IRQ_Stack_Size
                               EQU              0x00000080
   41 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
   42 00000000         
   44 00000000 00000180 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   45 00000000         
   46 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   47 00000000         
   48 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   49 00000400         __initial_sp
                               SPACE            ISR_Stack_Size
   50 00000580         
   51 00000580         Stack_Top
   52 00000580         
   53 00000580         
   54 00000580         ;// <h> Heap Configuration
   55 00000580         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   56 00000580         ;// </h>
   57 00000580         
   58 00000580 00000007 
                       N       EQU              7
   59 00000580         
   60 00000580         mem_space
                               SPACE            N * 4
   61 0000059C         
   62 0000059C 00000100 
                       Heap_Size
                               EQU              0x00000100
   63 0000059C         
   64 0000059C                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   65 00000000         



ARM Macro Assembler    Page 3 


   66 00000000         Heap_Mem
                               SPACE            Heap_Size
   67 00000100         
   68 00000100         
   69 00000100         
   70 00000100         
   71 00000100                 PRESERVE8
   72 00000100         
   73 00000100         
   74 00000100         ; Area Definition and Entry Point
   75 00000100         ;  Startup Code must be linked first at Address at which
                        it expects to run.
   76 00000100         
   77 00000100                 AREA             RESET, CODE, READONLY
   78 00000000                 ARM
   79 00000000         
   80 00000000         
   81 00000000         ; Exception vector table handles every type of exception
                       s.
   82 00000000         ;  It is mapped to Address 0.
   83 00000000         ;  Absolute addressing mode must be used.
   84 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
   85 00000000         
   86 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr ; reset         
                                                            
   87 00000004 E59FF018        LDR              PC, Undef_Addr ; undefined inst
                                                            ruction
   88 00000008 E59FF018        LDR              PC, SWI_Addr ; software interru
                                                            pt
   89 0000000C E59FF018        LDR              PC, PAbt_Addr ; prefetch abort
   90 00000010 E59FF018        LDR              PC, DAbt_Addr ; data abort
   91 00000014 E1A00000        NOP                          ; reserved vector 
   92 00000018 E59FF018        LDR              PC, IRQ_Addr ; IRQ
   93 0000001C E59FF018        LDR              PC, FIQ_Addr ; FIQ
   94 00000020         
   95 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
   96 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
   97 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
   98 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
   99 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  100 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
  101 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  102 0000003C 00000000 
                       FIQ_Addr



ARM Macro Assembler    Page 4 


                               DCD              FIQ_Handler
  103 00000040         
  104 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  105 00000044 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
  106 00000048 EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  107 0000004C EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
  108 00000050 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  109 00000054         
  110 00000054         ;SWI management
  111 00000054         SWI_Handler
  112 00000054 E92D5FFB        STMFD            sp!, {r0-r1, r3-r12, lr}
  113 00000058 E51E0004        LDR              r0, [lr, #-4]
  114 0000005C E3C014FF        BIC              r1, r0, #0xff000000
  115 00000060         ; test the identification code of the interrupt
  116 00000060 E3510010        CMP              r1, #0x10
  117 00000064 E59F20E4        LDR              R2, =0x7FFFFFFF
  118 00000068 EA000002        B                end_swi
  119 0000006C         
  120 0000006C E3510011        CMP              r1, #0x11
  121 00000070 E3A02102        LDR              R2, =0x80000000
  122 00000074         
  123 00000074 1AFFFFFF        BNE              end_swi
  124 00000078         
  125 00000078         ; your action here 
  126 00000078         
  127 00000078 E8FD9FFB 
                       end_swi LDMFD            sp!, {r0-r1, r3-r12, pc}^
  128 0000007C         
  129 0000007C         
  130 0000007C         ; Reset Handler
  131 0000007C         Reset_Handler
  132 0000007C         
  133 0000007C         
  134 0000007C         ; Initialise Interrupt System
  135 0000007C         ;  ...
  136 0000007C         
  137 0000007C         
  138 0000007C         ; Setup Stack for each mode
  139 0000007C         
  140 0000007C E59F00D0        LDR              R0, =Stack_Top
  141 00000080         
  142 00000080         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  143 00000080         ; MSR transfers the value of the immediate to the Progra
                       m Status Register (CPSR).
  144 00000080         ; CPSR indicates the state of the machine: it contains c
                       ondition code flags,
  145 00000080         ; interrupt enable flags, the current mode, and the curr
                       ent state.



ARM Macro Assembler    Page 5 


  146 00000080         ; We change the mode by updating CPSR
  147 00000080         
  148 00000080 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  149 00000084 E1A0D000        MOV              SP, R0
  150 00000088 E2400080        SUB              R0, R0, #UND_Stack_Size
  151 0000008C         
  152 0000008C         ;  Enter Abort Mode and set its Stack Pointer
  153 0000008C E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  154 00000090 E1A0D000        MOV              SP, R0
  155 00000094 E2400000        SUB              R0, R0, #ABT_Stack_Size
  156 00000098         
  157 00000098         ;  Enter FIQ Mode and set its Stack Pointer
  158 00000098 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  159 0000009C E1A0D000        MOV              SP, R0
  160 000000A0 E2400000        SUB              R0, R0, #FIQ_Stack_Size
  161 000000A4         
  162 000000A4         ;  Enter IRQ Mode and set its Stack Pointer
  163 000000A4 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  164 000000A8 E1A0D000        MOV              SP, R0
  165 000000AC E2400080        SUB              R0, R0, #IRQ_Stack_Size
  166 000000B0         
  167 000000B0         ;  Enter Supervisor Mode and set its Stack Pointer
  168 000000B0 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  169 000000B4 E1A0D000        MOV              SP, R0
  170 000000B8 E2400080        SUB              R0, R0, #SVC_Stack_Size
  171 000000BC         
  172 000000BC         ;  Enter User Mode and set its Stack Pointer
  173 000000BC E321F010        MSR              CPSR_c, #Mode_USR
  174 000000C0 E1A0D000        MOV              SP, R0
  175 000000C4 E24DAB01        SUB              SL, SP, #USR_Stack_Size
  176 000000C8         
  177 000000C8         
  178 000000C8         
  179 000000C8         ; main program starts here.
  180 000000C8         ; The interrupt service routine with identification code
                        10h is called
  181 000000C8         ;SWI #0x10
  182 000000C8         
  183 000000C8 E59F4088        LDR              R4, =literal1
  184 000000CC E59F5088        LDR              R5, =literal2
  185 000000D0 E3A0A000        LDR              R10, =0
  186 000000D4         loop
  187 000000D4 E794000A        LDR              R0, [R4, R10]
  188 000000D8 E795100A        LDR              R1, [R5, R10]
  189 000000DC E0902001        ADDS             R2, R0, R1
  190 000000E0 E10F6000        MRS              R6, CPSR
  191 000000E4 E206620A        AND              R6, R6, #0xA0000000 ;if there w
                                                            as an overflow and 
                                                            number is negative
  192 000000E8 E356020A        CMP              R6, #0xA0000000
  193 000000EC 0F000011        SWIEQ            0x11
  194 000000F0 0A000002        BEQ              next
  195 000000F4 E2066202        AND              R6, R6, #0x20000000 ;if there w
                                                            as an overflow and 



ARM Macro Assembler    Page 6 


                                                            number is positive
  196 000000F8 E3560202        CMP              R6, #0x20000000
  197 000000FC 0F000010        SWIEQ            0x10
  198 00000100         next
  199 00000100         
  200 00000100 059F3058        LDREQ            R3, =mem_space
  201 00000104 05832000        STREQ            R2, [R3]
  202 00000108         
  203 00000108 E28AA004        ADD              R10, R10, #4 ; counter -> PARTE
                                                             DA 0
  204 0000010C E35A001C        CMP              R10, #4*N   ; 4*N
  205 00000110 BAFFFFEF        BLT              loop        ; fin tanto che R10
                                                             < 4*N
  206 00000114         stop
  207 00000114 EAFFFFFE        B                stop
  208 00000118         ;B Reset_Handler
  209 00000118         
  210 00000118 FFFFFFFF 
              7FFFFFFF 
              00000010 
              70000000 
              FFFFFFE0 
              800000F0 
              100EC023 literal1
                               DCD              0xFFFFFFFF, 0x7FFFFFFF, 0x10, 0
x70000000, 0xFFFFFFE0, 0x800000F0, 0x100EC023
  211 00000134 00000001 
              00000001 
              00000200 
              12345678 
              E00A1238 
              F0004538 
              E9800348 literal2
                               DCD              0x00000001, 0x00000001,0x200, 0
x12345678, 0xE00A1238, 0xF0004538, 0xE9800348
  212 00000150         
  213 00000150                 END
              7FFFFFFF 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=template.d -otemplate.o 
-IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\Philips --predefine="__EVAL SETA 1" --list=
template.lst template.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 46 in file template.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 48 in file template.s
   Uses
      None
Comment: Stack_Mem unused
Stack_Top 00000580

Symbol: Stack_Top
   Definitions
      At line 51 in file template.s
   Uses
      At line 140 in file template.s
Comment: Stack_Top used once
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 49 in file template.s
   Uses
      None
Comment: __initial_sp unused
mem_space 00000580

Symbol: mem_space
   Definitions
      At line 60 in file template.s
   Uses
      At line 200 in file template.s
Comment: mem_space used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 64 in file template.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 66 in file template.s
   Uses
      None
Comment: Heap_Mem unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 99 in file template.s
   Uses
      At line 90 in file template.s
Comment: DAbt_Addr used once
DAbt_Handler 00000048

Symbol: DAbt_Handler
   Definitions
      At line 106 in file template.s
   Uses
      At line 99 in file template.s
      At line 106 in file template.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 102 in file template.s
   Uses
      At line 93 in file template.s
Comment: FIQ_Addr used once
FIQ_Handler 00000050

Symbol: FIQ_Handler
   Definitions
      At line 108 in file template.s
   Uses
      At line 102 in file template.s
      At line 108 in file template.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 101 in file template.s
   Uses
      At line 92 in file template.s
Comment: IRQ_Addr used once
IRQ_Handler 0000004C

Symbol: IRQ_Handler
   Definitions
      At line 107 in file template.s
   Uses
      At line 101 in file template.s
      At line 107 in file template.s

PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 98 in file template.s
   Uses
      At line 89 in file template.s
Comment: PAbt_Addr used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

PAbt_Handler 00000044

Symbol: PAbt_Handler
   Definitions
      At line 105 in file template.s
   Uses
      At line 98 in file template.s
      At line 105 in file template.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 77 in file template.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 95 in file template.s
   Uses
      At line 86 in file template.s
Comment: Reset_Addr used once
Reset_Handler 0000007C

Symbol: Reset_Handler
   Definitions
      At line 131 in file template.s
   Uses
      At line 95 in file template.s
Comment: Reset_Handler used once
SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 97 in file template.s
   Uses
      At line 88 in file template.s
Comment: SWI_Addr used once
SWI_Handler 00000054

Symbol: SWI_Handler
   Definitions
      At line 111 in file template.s
   Uses
      At line 97 in file template.s
Comment: SWI_Handler used once
Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 96 in file template.s
   Uses
      At line 87 in file template.s
Comment: Undef_Addr used once
Undef_Handler 00000040




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: Undef_Handler
   Definitions
      At line 104 in file template.s
   Uses
      At line 96 in file template.s
      At line 104 in file template.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 86 in file template.s
   Uses
      None
Comment: Vectors unused
end_swi 00000078

Symbol: end_swi
   Definitions
      At line 127 in file template.s
   Uses
      At line 118 in file template.s
      At line 123 in file template.s

literal1 00000118

Symbol: literal1
   Definitions
      At line 210 in file template.s
   Uses
      At line 183 in file template.s
Comment: literal1 used once
literal2 00000134

Symbol: literal2
   Definitions
      At line 211 in file template.s
   Uses
      At line 184 in file template.s
Comment: literal2 used once
loop 000000D4

Symbol: loop
   Definitions
      At line 186 in file template.s
   Uses
      At line 205 in file template.s
Comment: loop used once
next 00000100

Symbol: next
   Definitions
      At line 198 in file template.s
   Uses
      At line 194 in file template.s
Comment: next used once
stop 00000114

Symbol: stop



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 206 in file template.s
   Uses
      At line 207 in file template.s
Comment: stop used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 38 in file template.s
   Uses
      At line 44 in file template.s
      At line 155 in file template.s

FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 39 in file template.s
   Uses
      At line 44 in file template.s
      At line 160 in file template.s

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 24 in file template.s
   Uses
      At line 148 in file template.s
      At line 153 in file template.s
      At line 158 in file template.s
      At line 163 in file template.s
      At line 168 in file template.s

Heap_Size 00000100

Symbol: Heap_Size
   Definitions
      At line 62 in file template.s
   Uses
      At line 66 in file template.s
Comment: Heap_Size used once
IRQ_Stack_Size 00000080

Symbol: IRQ_Stack_Size
   Definitions
      At line 40 in file template.s
   Uses
      At line 44 in file template.s
      At line 165 in file template.s

ISR_Stack_Size 00000180

Symbol: ISR_Stack_Size
   Definitions
      At line 44 in file template.s
   Uses
      At line 49 in file template.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 23 in file template.s
   Uses
      At line 148 in file template.s
      At line 153 in file template.s
      At line 158 in file template.s
      At line 163 in file template.s
      At line 168 in file template.s

Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 19 in file template.s
   Uses
      At line 153 in file template.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 16 in file template.s
   Uses
      At line 158 in file template.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 17 in file template.s
   Uses
      At line 163 in file template.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 18 in file template.s
   Uses
      At line 168 in file template.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 21 in file template.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 20 in file template.s
   Uses
      At line 148 in file template.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 15 in file template.s
   Uses
      At line 173 in file template.s
Comment: Mode_USR used once
N 00000007

Symbol: N
   Definitions
      At line 58 in file template.s
   Uses
      At line 60 in file template.s
      At line 204 in file template.s

SVC_Stack_Size 00000080

Symbol: SVC_Stack_Size
   Definitions
      At line 37 in file template.s
   Uses
      At line 44 in file template.s
      At line 170 in file template.s

UND_Stack_Size 00000080

Symbol: UND_Stack_Size
   Definitions
      At line 36 in file template.s
   Uses
      At line 44 in file template.s
      At line 150 in file template.s

USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions
      At line 41 in file template.s
   Uses
      At line 48 in file template.s
      At line 175 in file template.s

18 symbols
373 symbols in table
